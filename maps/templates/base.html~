{% extends "index.html" %}
{% load staticfiles %}

<head>


<script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAINgesJb4VJ2iYHIcc-gT7hQGhS5yCmtMNZMUBKgpbJFW2uH_cRSd35D9AE7VSWY096Cd7dLkCk3bRA" type="text/javascript" encoding="utf-8"></script>

    </head>
    <body>

{% block content %}
    <div class="container-fluid">
      <div class="row">
        <div class="col-sm-3 col-md-2 sidebar" id = "list">

            <span class="anchor">Оберіть культуру</span>
          <ul class="nav nav-sidebar">
            <li><input type="checkbox" id = "soya" />Соя</li>
            <li><input type="checkbox" id = "kukuruza"/>Кукурудза</li>
            <li><input type="checkbox" id= "son" />Соняшник </li>
	    <li><input type="checkbox" id= "inshi" />Інші </li>
          </ul></br>
            <span class="anchor">Оберіть растр</span>
          <ul class="nav nav-sidebar">

            <li><input type="checkbox" id = 'zvich' checked/>Знімок звичайний</li>
            <li><input type="checkbox" id = "ndvi"/>Знімок NDVI</li>

        </ul></br>
             <span class="anchor">Оберіть карту</span>

          <ul class="nav nav-sidebar">
              <div class="radio">
  <label>
    <input type="checkbox"   id="google"  >
    Гугл карта
  </label>
                  <label>
    <input type="checkbox"    id = "sat"  >
    Супутниковий знімок
  </label>
                  <label>
    <input type="checkbox"  id="simple" checked>
    Проста карта
  </label>
</div>

              </ul>
        </div>
<div class="container">

      <div  id="map" class="map">


      <script defer="defer" type="text/javascript">




            var checkList = document.getElementById('list');
        checkList.getElementsByClassName('anchor')[0].onclick = function (evt) {
            if (checkList.classList.contains('visible'))
                checkList.classList.remove('visible');
            else
                checkList.classList.add('visible');

        };

        checkList.onblur = function(evt) {
            checkList.classList.add('visible');
        };

        var vlayer = new OpenLayers.Layer.Vector( "Editable" );

      var map = new OpenLayers.Map({
        div: "map",
        projection: new OpenLayers.Projection("EPSG:900913")
    });

    var osm = new OpenLayers.Layer.OSM();

            map.addControl(new OpenLayers.Control.MousePosition() );
vcontrol = new OpenLayers.Control.EditingToolbar(vlayer);
 map.addControl(vcontrol);

            var a = function get_popup(lonlat,data){
            popup = new OpenLayers.Popup.FramedCloud("chicken",
                       new OpenLayers.LonLat(lonlat.lon, lonlat.lat).transform(new OpenLayers.Projection("EPSG:4326"), new OpenLayers.Projection("EPSG:900913")),
                        null,
                          data,
                    null,

                       true
            );

             map.addPopup(popup);
                popup.backgroundColor = "#33805c";
             return popup
        };

          OpenLayers.Control.Click = OpenLayers.Class(OpenLayers.Control, {
                defaultHandlerOptions: {

                    'single': true,
                    'double': false,
                    'pixelTolerance': 0,
                    'stopSingle': false,
                    'stopDouble': false
                },

                initialize: function(options) {
                    this.handlerOptions = OpenLayers.Util.extend(
                        {}, this.defaultHandlerOptions
                    );
                    OpenLayers.Control.prototype.initialize.apply(
                        this, arguments
                    );
                    this.handler = new OpenLayers.Handler.Click(
                        this, {
                            'click': this.trigger
                        }, this.handlerOptions
                    );
                },

                trigger: function (e) {
                    var crop, pnt;
                    var lonlat = map.getLonLatFromPixel(e.xy).transform(new OpenLayers.Projection("EPSG:900913"), new OpenLayers.Projection("EPSG:4326"));

                    var event = {
                        lonlat: lonlat
                    };
                    var jso = JSON.stringify(event);


                    var result;

                    $.ajax({
                        url: "req/",
                        type: "GET",

                        data: jso,
                        async: false,

                        success: function (response) {

                            $('#mm').html(response);

                        },
                        complete: function (xhr, status) {


                        },
                        error: function (xhr, textStatus, thrownError) {
                            console.log(error);
                        }
                    });


                    a(lonlat, "<div>" + document.getElementById('mm').outerHTML + "</div>");

                }





            });


function add_click(){
    vcontrol.active.deactive();

}
geojson = new OpenLayers.Format.GeoJSON();

            function serialize(){
$("#statistic").outerHTML = "Зачекайте...";
var str = geojson.write(vlayer.features, true);
            $.ajax({
    url:"statistic/",
    type: "GET",

    data: str,
    async: true,

    success: function(response) {

        $('#statistic').html(response);

  },
    complete:function(xhr, status){
      vcontrol.deactivate();
        vcontrol = new OpenLayers.Control.EditingToolbar(vlayer);
        var click = new OpenLayers.Control.Click();

                map.addControl(click);
                click.activate();
 map.addControl(vcontrol);






    },
    error:function (xhr, textStatus, thrownError){
        console.log(error);
    }
});

            }

function distance_add(){
    geojson = new OpenLayers.Format.GeoJSON();
var str = geojson.write(vlayer.features, true);
            $.ajax({
    url:"dist/",
    type: "GET",

    data: str,
    async: false,

    success: function(response) {

        $('#distance').html(response);

  },
    complete:function(xhr, status){
      vcontrol.deactivate();
        vcontrol = new OpenLayers.Control.EditingToolbar(vlayer);
        var click = new OpenLayers.Control.Click();
                map.addControl(click);
                click.activate();
 map.addControl(vcontrol);






    },
    error:function (xhr, textStatus, thrownError){
        console.log(error);
    }
});

            }
           map.addControl(new OpenLayers.Control.ScaleLine());
            var gsat = new OpenLayers.Layer.Google("Google Physical" , { type : google.maps.MapTypeId.HYBRID, sphericalMercator : true });
var phys = new OpenLayers.Layer.Google(
                "Google Physical",
                {type: google.maps.MapTypeId.TERRAIN}
);
            var st = new OpenLayers.Layer.Google(
                "Google Streets", // the default
                {numZoomLevels: 20});

 var wms = new OpenLayers.Layer.WMS( "OpenLayers WMS",
  "http://vmap0.tiles.osgeo.org/wms/vmap0",
  {'layers':'basic', 'projection': 'map.displayProjection', tiled: true} );

  tiled = new OpenLayers.Layer.WMS(
                    "pixelsolution:gtif - Tiled", "http://localhost:8080/geoserver/pixelsolution/wms",
                    { transparent: 'true', layers:'pixelsolution:gtif',
        format: "image/png", tiled:true});
	map.addLayers([st, phys, gsat, tiled, vlayer]);





    map.setCenter(new OpenLayers.LonLat(30.59200, 48.46603).transform(new OpenLayers.Projection("EPSG:4326"), new OpenLayers.Projection("EPSG:900913")), 13);

	    var kukuruza = new OpenLayers.Layer.WMS("Кукурудза", "http://localhost:8080/geoserver/final/wms",
        { transparent: 'true', layers:'final:kukuruza',
        format: "image/png", tiled :true, reprojected:true});





	    var soya = new OpenLayers.Layer.WMS("Соя", "http://localhost:8080/geoserver/final/wms",
        { transparent: 'true', layers:'final:soya',
        format: "image/png", tiled :true});




	    var son = new OpenLayers.Layer.WMS("Соя", "http://localhost:8080/geoserver/final/wms",
        { transparent: 'true', layers:'final:son',
        format: "image/png", tiled :true});

var inshi = new OpenLayers.Layer.WMS("Інші", "http://localhost:8080/geoserver/final/wms",
        { transparent: 'true', layers:'final:inshi',
        format: "image/png", tiled :true});






var check1 = document.querySelector('#kukuruza');
        check1.onclick = function() {
        if (check1.checked) {
         map.addLayer(kukuruza);
        } else {
            map.removeLayer(kukuruza);
         }
        };


var check6 = document.querySelector('#google');
        check6.onclick = function() {
        if (check6.checked) {
         map.addLayer(phys);
        } else {
            map.removeLayer(phys);
         }
        };

        var check2 = document.querySelector('#soya');
        check2.onclick = function() {
        if (check2.checked) {
         map.addLayer(soya);
        } else {
            map.removeLayer(soya);
         }
        } ;


        var check3 = document.querySelector('#son');
        check3.onclick = function() {
        if (check3.checked) {
         map.addLayer(son);
        } else {
            map.removeLayer(son);
         }
        };

        var check4 = document.querySelector('#inshi');
        check4.onclick = function() {
        if (check4.checked) {
         map.addLayer(inshi);
        } else {
            map.removeLayer(inshi);
         }
        };


var check5 = document.querySelector('#zvich');
        check5.onclick = function() {
        if (check5.checked) {
         map.addLayer(tiled);
        } else {
            map.removeLayer(tiled);
         }
        };

        var check7 = document.querySelector('#sat');
        check7.onclick = function() {
        if (check7.checked) {
         map.addLayer(gsat);
        } else {
            map.removeLayer(gsat);
         }
        };


        var check8 = document.querySelector('#simple');
        check8.onclick = function() {
        if (check8.checked) {
         map.addLayer(st);
        } else {
            map.removeLayer(st);
         }
        };


var click = new OpenLayers.Control.Click();

                map.addControl(click);
                click.activate();

</script>

</div>
<p id = "mm" style="visibility: hidden;">

</p>



</div>
</div>
</div>
       <div>
    <button id = "stat" onclick="serialize()">Порахувати статистику</button>
           <p id = "statistic">
           <p>

    <button id = "dist" onclick="distance_add()">Порахувати відстань</button>
           <p id = "distance">
           <p>

           </div>
    {% endblock %}
</body>
</html>

